name: "CI"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # test:
  #   name: Linter and tests
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   steps:

  #   - name: Checkout commit
  #     uses: actions/checkout@v2

  #   - name: Setup Python 3.7
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.7'

  #   - name: Cache pip
  #     uses: actions/cache@v2.1.5
  #     with:
  #       key: pip-lint-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements*.txt') }}
  #       path: ~/.cache/pip
  #       restore-keys: |
  #         pip-lint-

  #   - name: Cache pre-commit
  #     uses: actions/cache@v2.1.5
  #     with:
  #       key: pre-commit-
  #       path: ~/.cache/pre-commit
  #       restore-keys: |
  #         pre-commit-

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install -U pip
  #       make setup

  #   - name: Run linters
  #     run: |
  #       make lint
  #     env:
  #       CI_LINT_RUN: 1

  #   - name: Run tests
  #     run: |
  #       make test


  deploy_dev:
    name: Deploy on dev
    runs-on: ubuntu-latest
    #needs: test
    # if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:

    - name: Checkout commit
      uses: actions/checkout@v2

    - name: Login to GCR
      uses: docker/login-action@v1
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCP_SERVICEACCOUNT_KEY }}

    - name: Login to GKE
      uses: google-github-actions/get-gke-credentials@main
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
        location: ${{ secrets.GKE_LOCATION }}
        credentials: ${{ secrets.GCP_SERVICEACCOUNT_KEY }}

    - name: Build and push images
      env:
        GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
      run: |
        make build-images
        make push-images

    # TODO: cache docker layers (action below doesn't work)
    #- name: Cache docker image layers
    #  uses: satackey/action-docker-layer-caching@v0.0.11
    #  continue-on-error: true

    - name: Deploy to dev
      env:
        GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        K8S_NAMESPACE: featurologists-dev
      run: |
        export GIT_REPO="git@github.com:${GITHUB_REPOSITORY}.git"
        export GIT_REV="${GITHUB_SHA}"

        echo "GIT_REPO=$GIT_REPO"
        echo "GIT_REV=$GIT_REV"

        make install-helm
        make helm-history

        make helm-deploy HELM_COMMAND="upgrade --atomic --wait --timeout=5m" \
          || { echo "Rolling back helm deployment"; make helm-rollback; false; }
        make helm-test
